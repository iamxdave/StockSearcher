@page "/Details/{stock}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Authorization
@using StocksPage.Client.Services
@using StocksPage.Shared.DTOs
@using StocksPage.Shared.DTOs.PolygonAPI

@*@attribute [Authorize]*@
@inject HttpClient Http
@inject NavigationManager navigator

<PageTitle>Dashboard</PageTitle>


<h1>Dashboard</h1>
<h2>@stock</h2>

@if (tickerChart == null || tickerDetail == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div id="layout">
		<SfDashboardLayout CellSpacing="@(new double[]{20,20})" Columns="9">
			<DashboardLayoutPanels>
				<DashboardLayoutPanel SizeX=9 SizeY=1>
					<HeaderTemplate><div>Search</div></HeaderTemplate>

					<ContentTemplate><div>search</div></ContentTemplate>
				</DashboardLayoutPanel>
				<DashboardLayoutPanel Row=1 SizeX=2 SizeY=2>
					<HeaderTemplate><div>Icon</div></HeaderTemplate>

					<ContentTemplate><div><img src="@tickerDetail.LogoUrl" alt="@stock logo"/></div></ContentTemplate>
				</DashboardLayoutPanel>
				<DashboardLayoutPanel Row=1 SizeX=7 SizeY=1>
					<HeaderTemplate><div>Name</div></HeaderTemplate>

					<ContentTemplate>
                        <div>
                            @tickerDetail.Name @tickerDetail.Ticker
                            <SfButton IconCss="e-icons e-check-small" Content="Add to watchlist" IconPosition="IconPosition.Right"></SfButton>
                        </div>
                    </ContentTemplate>
				</DashboardLayoutPanel>
				<DashboardLayoutPanel Row=2 SizeX=7 SizeY=1>
					<HeaderTemplate><div>Right data</div></HeaderTemplate>

					<ContentTemplate>
                        <div>
                            <SfTab CssClass="tab_content">
                                <TabItems>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="Details">

                                            </TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                            <div>
                                                SicDescription: @tickerDetail.SicDescription
                                                Country: @tickerDetail.Country
                                                Currency: @tickerDetail.Currency
                                                Cik: @tickerDetail.Cik
                                            </div>
                                        </ContentTemplate>
                                    </TabItem>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="More">

                                            </TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                             <div>
                                                 Description: @tickerDetail.Description
                                                 Number of employees: 
                                                 Homepage: @tickerDetail.Homepage
                                            </div>
                                        </ContentTemplate>
                                    </TabItem>
                                </TabItems>
                            </SfTab>
                            
                        </div>
                    </ContentTemplate>
				</DashboardLayoutPanel>
				<DashboardLayoutPanel Row=3 SizeX=9 SizeY=3>
					<HeaderTemplate><div>Chart</div></HeaderTemplate>

					<ContentTemplate>
						<div>
							<SfStockChart Title="@stock">
								<StockChartCrosshairSettings Enable="true">
								</StockChartCrosshairSettings>
								<StockChartTooltipSettings Enable="true">
								</StockChartTooltipSettings>
									<StockChartPrimaryXAxis>
										<StockChartAxisCrosshairTooltip Enable="true">
										</StockChartAxisCrosshairTooltip>
									</StockChartPrimaryXAxis>
									<StockChartPrimaryYAxis>
										<StockChartAxisCrosshairTooltip Enable="true">
										</StockChartAxisCrosshairTooltip>
									</StockChartPrimaryYAxis>
							<StockChartSeriesCollection>
								<StockChartSeries Type="@ChartSeriesType.Candle" DataSource="@tickerChart"
                                XName="Date" High="High" Low="Low" Open="Open" Close="Close" Volume="Volume">
								</StockChartSeries>
							</StockChartSeriesCollection>
							<StockChartChartArea>
										<StockChartChartAreaBorder Width="0"></StockChartChartAreaBorder>
							</StockChartChartArea>
							</SfStockChart>
						</div>
					</ContentTemplate>
				</DashboardLayoutPanel>
			</DashboardLayoutPanels>
		</SfDashboardLayout>
    </div>
}

<style>
    .tab_content .e-content .e-item {
        font-size: 2rem;
        padding: 1.7rem;
        text-align: justify;
    }
    .layout {
        position: relative;
        min-max: 90%;
    }
    .e-panel-header {
        background-color: rgba(0, 0, 0, .1);
        text-align: center;
    }
    .e-panel-content {
        text-align: center;
        margin-top: 10px;
    }
</style>

@code {
    [Parameter]
    public string stock { get; set; }

    [Inject]
    public IHttpStockService stockService { get; set; }

    private TickerDetailGet tickerDetail;
    private IEnumerable<TickerChartGet> tickerChart = new List<TickerChartGet>{};

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var arg = stock.ToString();

            tickerDetail = await stockService.GetTickerDetail(arg);
            tickerChart = await stockService.GetTickerChart(arg);
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private void addToWatchlist()
    {
        
    }

}
